<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>碳狼&#39;s Blog</title>
  
  <subtitle>碳狼&#39;s Blog</subtitle>
  <link href="https://carbon-wolf.github.io/atom.xml" rel="self"/>
  
  <link href="https://carbon-wolf.github.io/"/>
  <updated>2023-02-12T07:54:06.000Z</updated>
  <id>https://carbon-wolf.github.io/</id>
  
  <author>
    <name>carbon-wolf</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>在Fluid主题的一言中添加作者</title>
    <link href="https://carbon-wolf.github.io/posts/f88aa2a0.html"/>
    <id>https://carbon-wolf.github.io/posts/f88aa2a0.html</id>
    <published>2023-02-12T07:12:30.000Z</published>
    <updated>2023-02-12T07:54:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>目前，fluid主题的一言还不支持默认添加作者，所以我们需要修改首页打字机的代码。</p><p>1.打开<strong>主题</strong>根目录下的<code>layout\_partial\plugins</code>文件夹，修改其中的<code>typed.ejs</code>文件</p><p>2.找到以下语句</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">apiText ? <span class="hljs-title function_">typing</span>(apiText) : <span class="hljs-title function_">typing</span>(text);<br></code></pre></td></tr></tbody></table></figure><p>加入出处可在<code>typing(apiText)</code>中加入相应代码，示例：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">apiText ? <span class="hljs-title function_">typing</span>(<span class="hljs-string">'『'</span>+apiText+<span class="hljs-string">'』'</span>+ <span class="hljs-string">'&lt;br /&gt; &lt;h4&gt;'</span>+ <span class="hljs-string">'--'</span> +result[<span class="hljs-string">'from_who'</span>]+<span class="hljs-string">'「'</span>+result[<span class="hljs-string">'from'</span>]+<span class="hljs-string">'」'</span>+<span class="hljs-string">'&lt;/h4&gt;'</span>) : <span class="hljs-title function_">typing</span>(text);<br></code></pre></td></tr></tbody></table></figure><p>显示效果：</p><blockquote><p>『猫是可爱的，狼是很帅的。就是说，孤独又可爱又帅。』<br>–比企谷八幡「我的青春恋爱物语果然有问题」</p></blockquote><p>3.有一些一言并没有设置作者，此时typing会出现这样的情况</p><blockquote><p>『不要在晚上做出任何决定。』<br>–null「互联网」</p></blockquote><p>强迫症落泪。不过还是有解决办法的，我们可以在他的上方添加一个判断，如果<code>result['from_who']</code>的值为<code>null</code>，那么替换为空字符。</p><p>在步骤二修改的语句上方添加：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">if</span>(result[<span class="hljs-string">'from_who'</span>]===<span class="hljs-literal">null</span>) result[<span class="hljs-string">'from_who'</span>]=<span class="hljs-string">''</span>;<br></code></pre></td></tr></tbody></table></figure><p>显示效果：</p><blockquote><p>『不要在晚上做出任何决定。』<br>–「互联网」</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;目前，fluid主题的一言还不支持默认添加作者，所以我们需要修改首页打字机的代码。&lt;/p&gt;
&lt;p&gt;1.打开&lt;strong&gt;主题&lt;/strong&gt;根目录下的&lt;code&gt;layout\_partial\plugins&lt;/code&gt;文件夹，修改其中的&lt;code&gt;typed.ejs</summary>
      
    
    
    
    
    <category term="教程" scheme="https://carbon-wolf.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>希沃冰点还原忘记密码的解决方案</title>
    <link href="https://carbon-wolf.github.io/posts/786d78c9.html"/>
    <id>https://carbon-wolf.github.io/posts/786d78c9.html</id>
    <published>2023-02-10T04:28:33.000Z</published>
    <updated>2023-02-12T08:46:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>背景：呜呜学校用的WPS常常上课弹升级弹窗，∴决定使用微软office，奈何老师不告诉电教还原卡密码，于是自己动手那个丰衣足食&nbsp; 扯远了</p><hr><p>首先 要降级<strong>希沃管家&nbsp; 因为新版加密改了</strong></p><p><strong>下载链接：https:https://appdown.naierchina.com/appfile1/appfileup01/file2/20200819/SeewoServiceSetup_1.1.9.2219.exe</strong></p><p>当我打开卸载时</p><p><img src="https://picx.zhimg.com/80/v2-6ae86c867126f8d427654e4babef140c_1440w.webp" alt=""></p><p>需要输入管理密码</p><p>WTF(what the fine-day) 于是直接运行了降级安装包 然后它不用密码直接覆盖了！！！</p><p>如果按转结束后提示重启不要点，不然你的希沃管家版本又回去了。</p><hr><p>接下来就是激动人心的找密码了</p><p>进入 C:\ProgramData\Seewo\SeewoCore （ProgramData是默认隐藏的，需要打开“显示隐藏文件”选项）</p><p><img src="https://pic1.zhimg.com/80/v2-68960eafe5cf5b8b2dfd3f5102689e0e_1440w.webp" alt="鼠标批注的，各位轻喷"></p><p>打开 SeewoCore.ini文件(下图第二个)</p><p><img src="https://picx.zhimg.com/80/v2-d6a02aec1c0e03dff75bdf3f1a01e9be_1440w.webp" alt=""></p><p>seewo还原密码所在位置</p><p>打开后发现密码，但没有完全发现</p><p><img src="https://picx.zhimg.com/80/v2-ea3b90dd04333287cf79429579f5f8a5_1440w.webp" alt=""></p><p>黄色部分为密码</p><p>刚好三十二位，猜测是md5加密，去必应搜了个md5解密的网站</p><p><img src="https://picx.zhimg.com/80/v2-cb21ee3560d5ccf1dbc9f771068466d4_1440w.webp" alt=""></p><p>解密结果</p><p>哦豁，解密结果是六位，What a fine day（确信</p><p>密码获取完成，终于可以用office了（喜</p><p><img src="https://pic1.zhimg.com/80/v2-462f224ab32ab5b94b09d2c44e178f40_1440w.webp" alt=""></p><p>喜</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;背景：呜呜学校用的WPS常常上课弹升级弹窗，∴决定使用微软office，奈何老师不告诉电教还原卡密码，于是自己动手那个丰衣足食&amp;nbsp; 扯远了&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;首先 要降级&lt;strong&gt;希沃管家&amp;nbsp; 因为新版加密改了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;</summary>
      
    
    
    
    
    <category term="教程" scheme="https://carbon-wolf.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>使用mogenius免费资源搭建虚拟专网</title>
    <link href="https://carbon-wolf.github.io/posts/8105d395.html"/>
    <id>https://carbon-wolf.github.io/posts/8105d395.html</id>
    <published>2023-01-14T10:04:52.000Z</published>
    <updated>2023-02-12T07:54:06.000Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="发生了一些错误，请检查密码是否正确" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="6863eb4153e2ebf6c3e0fb6771e7006f37edabc6ac2f8bb1805f7d84f3578565">c28512ed1eaecdc5577decfc405d3fab16029273664ea8659e2aa0a4a86fbee6acc9149ce6edcce338befa8465844cf379dbc1d42505c918e12d2490ec6456d66d6c31074932dad048de7cc8ae46c3db15e6b23768107725e353769dbb16b17908b2695181e41624bbf70722c14b05abb6bed4ff556c8ae3a4e8ba2de4f18075261d412a1f71d44bed88ce048cde177f27db18d60710d2c7ccf24553ddfcd37277e83b9c5032d3fcc7f1ef3f44118f8931555ee157a3d65f37555a517b0aa5cae906dd21c1ac485ea9f614981a1d2adffc93e2cf1648b9335817a5ccec778a55556b8a3a70ee6aad2188d88466fb8a183e01e7319c4304df9a4da4080a5c65ce2c0e57af115204eb1ea878ce2700dacca758d0fc1c843d5cfdf193ee8c8b72065d4a0a396c8c2f15dd83cd7f32d0874e090fa8c2fc6f9ee32e87550f4565e7ce5cd37beedda7f25410e1566fcfc0df1ad5abcb16482086075274798322df60d0444d41aaa2c866eee0f1447f44dff128cfa4dda4de84d975e15526f90cc5e443b6372e4bd38d52e745af63449742f60b317babd59c89f07bdadf1e0d7ab39175da1806c54b7ea59a40a70a65503418ad3effd6d28430bdd65aac0c2801d820d70f3d7ff29e61cbfdef5df50e7cf67e449c8fb03906162f827b3c24742e1e102ebbde725c930df5f1630a84dfdb7d14d1250f1670826e2c952e6d3e2675e35446ecc34ebcf5f6840052349dca7dc0f716355ad9fa6727c844809288a2b0d6733ca03b9a831639a47221ad3f13c0fdb839a7ee0ad95aa4b4f6fb49d81caf552ed1ac4fb4ccf641830a11599093a26fa647c43019bd624810e9e24698ecd9936fd3a1430a920d7c3c270c8f30dbb0c20238fc8346bfe9be654a546f003269b46126c8685ed72713c5de130918af8d9323fbf96faf69bfed2b7f5fd4aefb4e423ab5dc9da39333574031a1752fb28ad8a575</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码以查看内容</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">Here&#39;s something encrypted, password is required to continue reading.</summary>
    
    
    
    
    <category term="教程" scheme="https://carbon-wolf.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>保护你的ssh</title>
    <link href="https://carbon-wolf.github.io/posts/60b1ae39.html"/>
    <id>https://carbon-wolf.github.io/posts/60b1ae39.html</id>
    <published>2023-01-06T02:30:48.000Z</published>
    <updated>2023-02-12T07:54:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>背景：我的第五次建站遭遇的攻击就是ssh的cve漏洞，好在我有备份的习惯。仅此记录保护过程并警示后人。</p><h1>明招：</h1><h2 id="1-改端口">1.改端口</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano /etc/ssh/sshd_config<br></code></pre></td></tr></tbody></table></figure><p>将文件中<span class="label label-default">port</span>后的22改成你想要的端口</p><h2 id="2-开启密钥登陆">2.开启密钥登陆</h2><p>建议查看<a href="https://man.openbsd.org/sshd_config">openssh官方文档</a></p><h2 id="3-限制密码错误次数">3.限制密码错误次数</h2><h2 id="4-只允许白名单ip登陆">4.只允许白名单ip登陆</h2><p>不推荐家里是动态ip的小伙伴使用</p><h1>奇怪的方法：</h1><p>嘿嘿，我最喜欢的部分来咯</p><p>首先，假设我要攻击别人的ssh，我会怎么下手？肯定是首选漏洞！</p><p>像我这种小弱鸡利用漏的不可能自己发现，所以我会先查ssh版本号，再查该版本的漏洞。</p><h2 id="1-篡改版本号">1.篡改版本号</h2><p>比如OpenSSH 7.7前存在一个用户名枚举漏洞，通过该漏洞，攻击者可以判断某个用户名是否存在于目标主机中。</p><p>现在，将ssh升级到最新版，并修改版本号为7.4，可以浪费攻击者时间，让别人不知道你的真实版本。</p><p>首先备份sshd文件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span>/usr/sbin/sshd/usr/sbin/sshd.bak<br></code></pre></td></tr></tbody></table></figure><p>查找版本号</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">strings /usr/bin/ssh |grep OpenSSH<br></code></pre></td></tr></tbody></table></figure><p>修改版本号</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed-i<span class="hljs-string">'s/OpenSSH_8.8p1/OpenSSH_7.4p1/g'</span>/usr/sbin/sshd<br></code></pre></td></tr></tbody></table></figure><h2 id="2-修改banner">2.修改banner</h2><p>当ssh暴露在公网时，大量的bot会来尝试爆破你的服务器，如果你使用的是弱口令，很抱歉，你的服务器可能没了…<br>如果输错密码，服务器便会返回Permission denied，扫描器就是通过检测服务器返回的信息来判断是否登录成功的。有些不太聪明的bot会识别banner为Permission denied时认为这个密码是错的。</p><p>打开sshd_config, 在末尾添加</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">Banner [txt文件路径]<br></code></pre></td></tr></tbody></table></figure><p>然后创建txt文件，在文件中写入Access denied或其他任意文本。重启ssh</p><h2 id="3-开一个ssh蜜獾">3.开一个ssh蜜獾</h2><p>这个也只能做做安全审计啥的，看看谁扫了你的假ssh，并记录他输入的命令（不会执行），可以使用sshsame</p><div class="note note-danger">            <p>warn:一个封闭的端口比一个开放的服务好。</p>          </div><h2 id="4-使用knockd">4.使用knockd</h2><p>比较复杂，比较安全。</p><p>例如一次击中端口52996,一次击中端口2008,两次击中端口54088，这相当于敲一个关闭的门。用一种特殊的暗码来被konckd识别，konckd将打开一个端口。例如ssh端口，直到超时后或再次敲门ssh端口被knockd关掉。</p><h2 id="5-使用代理">5.使用代理</h2><p>这个自行谷歌</p><h2 id="6-用iptables重定向22端口到你仇人服务器上的ssh">6.用iptables重定向22端口到你仇人服务器上的ssh</h2><p>这个不好说，大家看看就行</p><hr><p>剩下那几个压箱底的就不说了，以免服务器被破。<img src="/img/doge.png" alt="doge" width="50" height="50"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;背景：我的第五次建站遭遇的攻击就是ssh的cve漏洞，好在我有备份的习惯。仅此记录保护过程并警示后人。&lt;/p&gt;
&lt;h1&gt;明招：&lt;/h1&gt;
&lt;h2 id=&quot;1-改端口&quot;&gt;1.改端口&lt;/h2&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tbo</summary>
      
    
    
    
    
    <category term="教程" scheme="https://carbon-wolf.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>(鸽了)markdown基本语法&amp;hexo使用指北</title>
    <link href="https://carbon-wolf.github.io/posts/67861b1d.html"/>
    <id>https://carbon-wolf.github.io/posts/67861b1d.html</id>
    <published>2022-12-29T07:30:48.000Z</published>
    <updated>2023-02-12T07:54:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>刚出炉的新鲜博客，自然是要水一篇博文啦。</p><h1>Markdown</h1><h2 id="标题">标题</h2><p>usage：在标题前加入 # 号<br>example：</p><blockquote><p># hello world</p></blockquote><p>多级标题：</p><blockquote><p>一级：<br># one<br>二级：<br>## two<br>三级：<br>### three<br>… …</p></blockquote><hr><h2 id="换行">换行</h2><p>usage：在句子后面加两个空格后回车<br>example：</p><blockquote><p>你好。<br>再见</p></blockquote><p>你好。<br>再见</p><hr><h2 id="分段">分段</h2><p>usage：两个个段落之间隔一行<br>example：</p><blockquote><p>A段落<br>（空行）<br>B段落</p></blockquote><p>A段落</p><p>B段落</p><hr><h2 id="引用">引用</h2><p>usage：再要引用的文字前加 &gt; 号<br>example：</p><blockquote><p>&gt; hello world</p></blockquote><blockquote><p>hello world</p></blockquote><p>tips：引用内容若包含markdown语法也会被md渲染（嵌套引用）</p><hr><h2 id="粗体">粗体</h2><p>usage：文本前加两个 * 号<br>example：</p><blockquote><p>**hello** world</p></blockquote><p><strong>hello</strong> world</p><hr><h2 id="斜体">斜体</h2><p>usage：文本前加一个 * 号<br>example:</p><blockquote><p>*hello* world</p></blockquote><p><em>hello</em> world</p><hr><h2 id="代码块">代码块</h2><p>usage:把代码包裹在三个反引号 ` 中。语法高亮需要指定一种语言。</p><blockquote><p>``` c++<br>#include<cstdio><br>printf(“hello world”);<br>```</cstdio></p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-built_in">printf</span>(hello world);<br></code></pre></td></tr></tbody></table></figure><hr><h2 id="分割线">分割线</h2><p>usage：</p><hr><h2 id="超链接">超链接</h2><p>usage：</p><hr><h2 id="图片">图片</h2><p>usage：</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;刚出炉的新鲜博客，自然是要水一篇博文啦。&lt;/p&gt;
&lt;h1&gt;Markdown&lt;/h1&gt;
&lt;h2 id=&quot;标题&quot;&gt;标题&lt;/h2&gt;
&lt;p&gt;usage：在标题前加入 # 号&lt;br&gt;
example：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;# hello world&lt;/p&gt;
&lt;/b</summary>
      
    
    
    
    
    <category term="markdown" scheme="https://carbon-wolf.github.io/tags/markdown/"/>
    
    <category term="教程" scheme="https://carbon-wolf.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
</feed>
