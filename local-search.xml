<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>保护你的ssh</title>
    <link href="/2023/01/06/ssh-an-quan/"/>
    <url>/2023/01/06/ssh-an-quan/</url>
    
    <content type="html"><![CDATA[<p>背景：我的第五次建站遭遇的攻击就是ssh的cve漏洞，好在我有备份的习惯。仅此记录保护过程并警示后人。</p><h1>明招：</h1><h2 id="1-改端口">1.改端口</h2><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nano /etc/ssh/sshd_config<br></code></pre></td></tr></tbody></table></figure><p>将文件中<span class="label label-default">port</span>后的22改成你想要的端口</p><h2 id="2-开启密钥登陆">2.开启密钥登陆</h2><p>建议查看<a href="https://man.openbsd.org/sshd_config">openssh官方文档</a></p><h2 id="3-限制密码错误次数">3.限制密码错误次数</h2><h2 id="4-只允许白名单ip登陆">4.只允许白名单ip登陆</h2><p>不推荐家里是动态ip的小伙伴使用</p><h1>阴招</h1><p>嘿嘿，我最喜欢的部分来咯</p><p>首先，假设我要攻击别人的ssh，我会怎么下手？肯定是首选漏洞！</p><p>像我这种小弱鸡利用漏的不可能自己发现，所以我会先查ssh版本号，再查该版本的漏洞。</p><h2 id="1-篡改版本号">1.篡改版本号</h2><p>比如OpenSSH 7.7前存在一个用户名枚举漏洞，通过该漏洞，攻击者可以判断某个用户名是否存在于目标主机中。</p><p>现在，将ssh升级到最新版，并修改版本号为7.4，可以浪费攻击者时间，让别人不知道你的真实版本。</p><p>首先备份sshd文件</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cp</span>&nbsp;/usr/sbin/sshd&nbsp;/usr/sbin/sshd.bak<br></code></pre></td></tr></tbody></table></figure><p>查找版本号</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">strings /usr/bin/ssh |grep OpenSSH<br></code></pre></td></tr></tbody></table></figure><p>修改版本号</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sed&nbsp;-i&nbsp;<span class="hljs-string">'s/OpenSSH_8.8p1/OpenSSH_7.4p1/g'</span>&nbsp;/usr/sbin/sshd<br></code></pre></td></tr></tbody></table></figure><h2 id="2-开一个ssh蜜獾">2.开一个ssh蜜獾</h2><p>这个也只能做做安全审计啥的，看看谁扫了你的假ssh，并记录他输入的命令（不会执行），可以使用sshsame</p><div class="note note-danger">            <p>warn:一个封闭的端口比一个开放的服务好。</p>          </div><h2 id="3-使用knockd">3.使用knockd</h2><p>比较复杂，比较安全。</p><p>例如一次击中端口52996,一次击中端口2008,两次击中端口54088，这相当于敲一个关闭的门。用一种特殊的暗码来被konckd识别，konckd将打开一个端口。例如ssh端口，直到超时后或再次敲门ssh端口被knockd关掉。</p><h2 id="4-用iptables重定向22端口到你仇人服务器上的ssh">4.用iptables重定向22端口到你仇人服务器上的ssh</h2><p>这个不好说，大家看看就行</p><hr><p>剩下那几个压箱底的就不说了，以免服务器被破。<img src="/img/doge.png" alt="doge" width="50" height="50"></p>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
      <tag>ssh</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>(鸽了)markdown基本语法&amp;hexo使用指北</title>
    <link href="/2022/12/29/markdown-ji-ben-yu-fa/"/>
    <url>/2022/12/29/markdown-ji-ben-yu-fa/</url>
    
    <content type="html"><![CDATA[<p>刚出炉的新鲜博客，自然是要水一篇博文啦。</p><h1>Markdown</h1><h2 id="标题">标题</h2><p>usage：在标题前加入 # 号<br>example：</p><blockquote><p># hello world</p></blockquote><p>多级标题：</p><blockquote><p>一级：<br># one<br>二级：<br>## two<br>三级：<br>### three<br>… …</p></blockquote><hr><h2 id="换行">换行</h2><p>usage：在句子后面加两个空格后回车<br>example：</p><blockquote><p>你好。<br>再见</p></blockquote><p>你好。<br>再见</p><hr><h2 id="分段">分段</h2><p>usage：两个个段落之间隔一行<br>example：</p><blockquote><p>A段落<br>（空行）<br>B段落</p></blockquote><p>A段落</p><p>B段落</p><hr><h2 id="引用">引用</h2><p>usage：再要引用的文字前加 &gt; 号<br>example：</p><blockquote><p>&gt; hello world</p></blockquote><blockquote><p>hello world</p></blockquote><p>tips：引用内容若包含markdown语法也会被md渲染（嵌套引用）</p><hr><h2 id="粗体">粗体</h2><p>usage：文本前加两个 * 号<br>example：</p><blockquote><p>**hello** world</p></blockquote><p><strong>hello</strong> world</p><hr><h2 id="斜体">斜体</h2><p>usage：文本前加一个 * 号<br>example:</p><blockquote><p>*hello* world</p></blockquote><p><em>hello</em> world</p><hr><h2 id="代码块">代码块</h2><p>usage:把代码包裹在三个反引号 ` 中。语法高亮需要指定一种语言。</p><blockquote><p>``` c++<br>#include<cstdio><br>printf(“hello world”);<br>```</cstdio></p></blockquote><figure class="highlight c++"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;cstdio&gt;</span></span><br><span class="hljs-built_in">printf</span>(hello world);<br></code></pre></td></tr></tbody></table></figure><hr><h2 id="分割线">分割线</h2><p>usage：</p><hr><h2 id="超链接">超链接</h2><p>usage：</p><hr><h2 id="图片">图片</h2><p>usage：</p>]]></content>
    
    
    
    <tags>
      
      <tag>markdown</tag>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
